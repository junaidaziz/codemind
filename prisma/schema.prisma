generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"] // enables "extensions" in datasource
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

/// --------------------------------------------------------------------
/// Models
/// --------------------------------------------------------------------

model User {
  id         String   @id @default(cuid())
  email      String?  @unique
  name       String?
  image      String?
  role       String   @default("user") // user | admin
  projects   Project[]
  sessions   ChatSession[]
  createdAt  DateTime @default(now())
}

model Project {
  id            String        @id @default(cuid())
  ownerId       String
  owner         User           @relation(fields: [ownerId], references: [id])
  name          String
  githubUrl     String
  defaultBranch String         @default("main")
  visibility    String         @default("public") // public | private
  status        String         @default("idle")   // idle | indexing | ready | error
  lastIndexedAt DateTime?
  files         CodeChunk[]
  sessions      ChatSession[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model ChatSession {
  id         String       @id @default(cuid())
  projectId  String
  project    Project       @relation(fields: [projectId], references: [id])
  userId     String
  user       User          @relation(fields: [userId], references: [id])
  title      String         @default("New Chat")
  createdAt  DateTime       @default(now())
  messages   Message[]
}

model Message {
  id          String        @id @default(cuid())
  sessionId   String
  session     ChatSession   @relation(fields: [sessionId], references: [id])
  role        String        // user | assistant | system
  content     String
  tokenCount  Int?
  latencyMs   Int?
  createdAt   DateTime      @default(now())
}

/// Each row = code chunk with its embedding
model CodeChunk {
  id          String   @id @default(cuid())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  path        String
  sha         String
  language    String
  startLine   Int
  endLine     Int
  content     String   @db.Text
  tokenCount  Int
  embedding   Unsupported("vector(1536)") // pgvector column
  updatedAt   DateTime @updatedAt

  @@index([projectId])
  @@index([projectId, path])
  @@index([projectId, embedding])
}
