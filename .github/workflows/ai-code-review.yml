name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger AI Code Review
        id: review
        run: |
          # Extract repository info
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Call CodeMind API
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X POST "${{ secrets.CODEMIND_API_URL }}/api/code-review/analyze" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CODEMIND_API_KEY }}" \
            -d "{
              \"owner\": \"$REPO_OWNER\",
              \"repo\": \"$REPO_NAME\",
              \"prNumber\": $PR_NUMBER,
              \"projectId\": \"${{ secrets.CODEMIND_PROJECT_ID || 'default' }}\"
            }")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response: $BODY"
          
          # Check for success
          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::AI Code Review failed with status $HTTP_CODE"
            exit 1
          fi
          
          # Extract review ID and risk level from response
          REVIEW_ID=$(echo "$BODY" | jq -r '.reviewId // ""')
          RISK_LEVEL=$(echo "$BODY" | jq -r '.riskLevel // "UNKNOWN"')
          OVERALL_SCORE=$(echo "$BODY" | jq -r '.overallScore // 0')
          
          echo "review-id=$REVIEW_ID" >> $GITHUB_OUTPUT
          echo "risk-level=$RISK_LEVEL" >> $GITHUB_OUTPUT
          echo "overall-score=$OVERALL_SCORE" >> $GITHUB_OUTPUT

      - name: Post Review Summary
        if: always() && steps.review.outputs.review-id
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviewId = '${{ steps.review.outputs.review-id }}';
            const riskLevel = '${{ steps.review.outputs.risk-level }}';
            const overallScore = '${{ steps.review.outputs.overall-score }}';
            const apiUrl = '${{ secrets.CODEMIND_API_URL }}';
            
            const riskEmoji = {
              'LOW': '‚úÖ',
              'MEDIUM': '‚ö†Ô∏è',
              'HIGH': 'üî∂',
              'CRITICAL': 'üö®'
            };
            
            const emoji = riskEmoji[riskLevel] || 'üìä';
            
            const body = `## ${emoji} AI Code Review Complete
            
            **Risk Level:** ${riskLevel}  
            **Overall Score:** ${overallScore}/100
            
            [View Detailed Review](${apiUrl}/reviews/${reviewId})
            
            ---
            *Automated review powered by CodeMind AI*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Check Risk Threshold
        if: steps.review.outputs.risk-level == 'CRITICAL'
        run: |
          echo "::warning::Critical risk detected in this PR!"
          # Optionally fail the workflow on CRITICAL risk
          # exit 1
